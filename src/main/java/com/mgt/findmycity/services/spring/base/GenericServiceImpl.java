/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/manager/support/GenericEntityServiceImpl.p.vm.java
 */
package com.mgt.findmycity.services.spring.base;

import java.io.Serializable;

import org.apache.log4j.Logger;
import org.springframework.transaction.annotation.Transactional;

import com.mgt.findmycity.services.dao.base.GenericHibernateDao;

/**
 * Default implementation of the {@link GenericService}
 * @see GenericService
 */
public abstract class GenericServiceImpl<T,ID extends Serializable> implements
        GenericService<T, ID> {

    private Logger log;

    public GenericServiceImpl() {
        this.log = Logger.getLogger(getClass());
    }

    abstract public GenericHibernateDao<T, ID> getDao();

    @Transactional
    public void save(T model) {
        getDao().doPersistent(model);
    }
    @Transactional
    public void save(Iterable<T> models) {
        getDao().doPersistent(models);
    }
    @Transactional
    public T merge(T model) {
        return getDao().doMerge(model);
    }
    @Transactional(readOnly = true)
    public T getByPrimaryKey(ID primaryKey) {
        T entity = getNew();
        //entity.setPrimaryKey(primaryKey);
        return get(entity);
    }
    @Transactional
    public void deleteByPrimaryKey(ID primaryKey) {
        delete(getByPrimaryKey(primaryKey));
    }
    @Transactional(readOnly = true)
    public T get(T model) {
        return getDao().doFind(model);
    }
    @Transactional
    public void delete(T model) {
        if (model == null) {
            if (log.isDebugEnabled()) {
                log.debug("Skipping deletion for null model!");
            }
            return;
        }
        getDao().doRemove(model);
    }
    @Transactional
    public void delete(Iterable<T> models) {
        getDao().doRemove(models);
    }
}