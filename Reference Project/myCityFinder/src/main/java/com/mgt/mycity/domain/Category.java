/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/domain/Entity.e.vm.java
 */
package com.mgt.mycity.domain;

import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.validator.constraints.NotEmpty;
import com.mgt.mycity.validation.JpaUnique;

@Entity
@Table(name = "category")
@Cache(usage = NONSTRICT_READ_WRITE)
@JpaUnique
public class Category implements Identifiable<Integer>, Serializable, Copyable<Category> {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Category.class);

    // Raw attributes
    private Integer categoryId; // pk
    private String name; // not null
    private String desc; // not null

    // ---------------------------
    // Constructors
    // ---------------------------

    public Category() {
    }

    public Category(Integer primaryKey) {
        setPrimaryKey(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------

    @Override
    @Transient
    @XmlTransient
    public Integer getPrimaryKey() {
        return getCategoryId();
    }

    @Override
    public void setPrimaryKey(Integer categoryId) {
        setCategoryId(categoryId);
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isPrimaryKeySet() {
        return isCategoryIdSet();
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------

    // -- [categoryId] ------------------------

    @Column(name = "CATEGORY_ID", nullable = false, unique = true, precision = 10)
    @GeneratedValue
    @Id
    public Integer getCategoryId() {
        return categoryId;
    }

    public void setCategoryId(Integer categoryId) {
        this.categoryId = categoryId;
    }

    @Transient
    public boolean isCategoryIdSet() {
        return categoryId != null;
    }

    // -- [name] ------------------------

    @NotEmpty
    @Size(max = 45)
    @Column(name = "NAME", nullable = false, length = 45)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    // -- [desc] ------------------------

    @NotEmpty
    @Size(max = 45)
    @Column(name = "`DESC`", nullable = false, length = 45)
    public String getDesc() {
        return desc;
    }

    public void setDesc(String desc) {
        this.desc = desc;
    }

    // -----------------------------------------
    // Set defaults values
    // -----------------------------------------

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    // -----------------------------------------
    // equals and hashCode
    // -----------------------------------------

    // The first time equals or hashCode is called,
    // we check if the primary key is present or not.
    // If yes: we use it in equals/hashCode
    // If no: we use a VMID during the entire life of this
    // instance even if later on this instance is assigned
    // a primary key.

    @Override
    public boolean equals(Object category) {
        if (this == category) {
            return true;
        }

        if (!(category instanceof Category)) {
            return false;
        }

        Category other = (Category) category;
        return _getUid().equals(other._getUid());
    }

    @Override
    public int hashCode() {
        return _getUid().hashCode();
    }

    private Object _uid;

    private Object _getUid() {
        if (_uid == null) {
            if (isPrimaryKeySet()) {
                _uid = getPrimaryKey();
            } else {
                _uid = new java.rmi.dgc.VMID();
                log
                        .warn("DEVELOPER: hashCode has changed!."
                                + "If you encounter this message you should take the time to carefuly review equals/hashCode for: "
                                + getClass().getCanonicalName());
            }
        }
        return _uid;
    }

    // -----------------------------------------
    // toString
    // -----------------------------------------

    /**
     * Construct a readable string representation for this Category instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder result = new StringBuilder();
        result.append("category.categoryId=[").append(getCategoryId()).append("]\n");
        result.append("category.name=[").append(getName()).append("]\n");
        result.append("category.desc=[").append(getDesc()).append("]\n");
        return result.toString();
    }

    // -----------------------------------------
    // Copyable Implementation
    // (Support for REST web layer)
    // -----------------------------------------

    /**
     * Return a copy of the current object
     */
    @Override
    public Category copy() {
        Category category = new Category();
        copyTo(category);
        return category;
    }

    /**
     * Copy the current properties to the given object
     */
    @Override
    public void copyTo(Category category) {
        category.setCategoryId(getCategoryId());
        category.setName(getName());
        category.setDesc(getDesc());
    }
}