/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-mvc-3:src/main/java/formatter/Formatter.e.vm.java
 */
package com.mgt.mycity.formatter;

import java.text.ParseException;
import java.util.Locale;

import com.mgt.mycity.domain.Category;
import com.mgt.mycity.service.CategoryService;
import com.mgt.mycity.formatter.support.DiscoverableFormatter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 * {@link Formatter} for {@link Category} that is picked by automatically by {@link CustomFormattingConversionServiceFactory}
 * 
 * @see Formatter
 * @see CustomFormattingConversionServiceFactory
 */
@Component
public class CategoryFormatter implements DiscoverableFormatter<Category> {

    @Autowired
    private CategoryService categoryService;

    @Override
    public Class<Category> getTarget() {
        return Category.class;
    }

    @Override
    public String print(Category category, Locale locale) {
        if (category == null) {
            return "";
        }

        StringBuilder sb = new StringBuilder();
        // make a nice display string here...

        if (category.getName() != null) {
            sb.append(category.getName()).append(" ");
        }

        if (category.getDesc() != null) {
            sb.append(category.getDesc()).append(" ");
        }

        if (sb.length() > 0) {
            return sb.toString();
        } else if (category.isPrimaryKeySet()) {
            return category.getPrimaryKey().toString();
        } else {
            return category.toString();
        }
    }

    @Override
    public Category parse(String text, Locale locale) throws ParseException {
        if (text == null || text.isEmpty()) {
            return new Category();
        }
        Category category = categoryService.getByPrimaryKey(new Integer(text));
        return category != null ? category : new Category();
    }
}
