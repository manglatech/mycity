<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mgt.is</groupId>
  <artifactId>mycity</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>mycity Maven Webapp</name>
  <url>http://maven.apache.org</url>
	<properties>
		<!-- Note: during development using the same value for your login, password, database name and project name is really convenient -->
		<database.name>${project.name}</database.name>
		<database.host>localhost</database.host>
		<database.user>${project.name}</database.user>
		<database.password>${project.name}</database.password>

		<!-- jdbc driver dependency -->
		<jdbc.groupId>mysql</jdbc.groupId>
		<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
		<jdbc.version>5.1.18</jdbc.version>
		
		<!-- jdbc settings -->
		<jdbc.type>mysql</jdbc.type>
		<jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
		<jdbc.url>jdbc:mysql://localhost:3307/findmycity</jdbc.url>
		<jdbc.user>root</jdbc.user>
		<jdbc.password>root</jdbc.password>
		<hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect</hibernate.dialect>
		<sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
		<jdk.version>1.6</jdk.version>

		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Version dependencies when used in multiple dependencies -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

		<hibernate.version>4.0.0.Final</hibernate.version>
		<hibernate-validator.version>4.2.0.Final</hibernate-validator.version>

		<spring.version>3.0.5.RELEASE</spring.version>
		<spring-security.version>3.0.5.RELEASE</spring-security.version>

		<slf4j.version>1.5.10</slf4j.version>
		<jetty.version>7.5.1.v20110908</jetty.version>

		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Variables substituted in resources file at build time -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

		<application.name>${project.name}</application.name>
		<application.version>${project.version}</application.version>
		<application.description>${project.description}</application.description>

		<!-- host port where the application will be deployed -->
		<application.host>localhost</application.host>
		<application.port>8080</application.port>
		<application.contextpath>/mycity</application.contextpath>
		<log4j.level>DEBUG</log4j.level>

		<!-- hibernate, see by src/main/resource/hibernate.properties -->
		<hibernate.show.sql>true</hibernate.show.sql>
		<hibernate.format.sql>true</hibernate.format.sql>
		<hibernate.generate_statistics>true</hibernate.generate_statistics>
		<hibernate.use_sql_comments>true</hibernate.use_sql_comments>
		<!-- Control hibernate 2d level caching -->
		<hibernate.ehcache.configuration.file>ehcache.xml</hibernate.ehcache.configuration.file>
		<hibernate.use.second.level.cache>true</hibernate.use.second.level.cache>
		<hibernate.use.query.cache>true</hibernate.use.query.cache>
	</properties>
	<profiles>
		<profile>
			<id>mysql</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>mysql</jdbc.groupId>
				<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
				<jdbc.version>5.1.17</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>mysql</jdbc.type>
				<jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
				<!-- see http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-configuration-properties.html -->
				<jdbc.url>jdbc:mysql://${database.host}/${database.name}?zeroDateTimeBehavior=convertToNull</jdbc.url>
				<jdbc.catalog>${database.name}</jdbc.catalog>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~ -->
			<!-- Disable debug modes -->
			<!-- ~~~~~~~~~~~~~~~~~~~ -->
			<id>perf</id>
			<properties>
				<hibernate.show.sql>false</hibernate.show.sql>
				<hibernate.format.sql>false</hibernate.format.sql>
				<hibernate.use_sql_comments>false</hibernate.use_sql_comments>
				<hibernate.generate_statistics>false</hibernate.generate_statistics>
				<log4j.level>WARN</log4j.level>
			</properties>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- Drop and recreate the database -->
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<id>db</id>
			<build>
				<defaultGoal>initialize</defaultGoal>
				<plugins>
					<plugin>
						<!-- http://mojo.codehaus.org/sql-maven-plugin/ -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.4</version>
						<configuration>
							<driver>${jdbc.driver}</driver>
							<url>${jdbc.url}</url>
							<username>${jdbc.user}</username>
							<password>${jdbc.password}</password>
							<autocommit>true</autocommit>
							<encoding>UTF-8</encoding>
							<print>true</print>
							<printResultSet>true</printResultSet>
							<onError>continue</onError>
							<delimiter>${sql-maven-plugin.delimiter}</delimiter>
							<orderFile>ascending</orderFile>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>src/main/sql/${jdbc.type}/*.sql</include>
								</includes>
							</fileset>
						</configuration>
						<executions>
							<execution>
								<id>Create and initialize the database</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- Compile the JSP to prevent broken pages -->
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<id>jspcompilation</id>
			<build>
				<defaultGoal>jetty-jspc:jspc</defaultGoal>
				<plugins>
					<plugin>
						<!-- http://docs.codehaus.org/display/JETTY/Maven+Jetty+Jspc+Plugin -->
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-jspc-plugin</artifactId>
						<version>6.1.16</version>
						<executions>
							<execution>
								<id>Compile the jsp to check for broken pages</id>
								<goals>
									<goal>jspc</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<reporting>
		<plugins>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-surefire-report-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.4.3</version>
				<configuration>
					<showSuccess>false</showSuccess>
					<argLine>-Xmx512m -XX:MaxPermSize=256m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-javadoc-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.6.1</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-jxr-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/taglist-maven-plugin/ -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-pmd-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<linkXref>true</linkXref>
					<targetJdk>${jdk.version}</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-changes-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<xmlPath>src/site/changes.xml</xmlPath>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/cobertura-maven-plugin/ -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/l10n-maven-plugin/ -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>l10n-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<configuration>
					<locales>
						<locale>en</locale>
						<locale>fr</locale>
					</locales>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/findbugs-maven-plugin/ -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<dependencies>
	
		<dependency>
   			<groupId>com.sun.jersey</groupId>
   			<artifactId>jersey-server</artifactId>
   			<version>1.11</version>
  		</dependency>
		<dependency>
   			<groupId>com.sun.jersey</groupId>
   			<artifactId>jersey-core</artifactId>
   			<version>1.11</version>
  		</dependency>
  		<dependency>
   			<groupId>com.sun.jersey</groupId>
   			<artifactId>jersey-json</artifactId>
   			<version>1.11</version>
  		</dependency>
  		<dependency>
   			<groupId>com.sun.jersey</groupId>
   			<artifactId>jersey-servlet</artifactId>
   			<version>1.11</version>
  		</dependency>
  		<dependency>
   			<groupId>com.sun.jersey.contribs</groupId>
   			<artifactId>jersey-spring</artifactId>
   			<version>1.2</version>
   			 <exclusions>
	        	<exclusion>
	          		<groupId>org.springframework</groupId>
	          		<artifactId>spring</artifactId>
	        	</exclusion>
	        	<exclusion>
	          		<groupId>org.springframework</groupId>
	          		<artifactId>spring-beans</artifactId>
	        	</exclusion>
	        	<exclusion>
	          		<groupId>org.springframework</groupId>
	          		<artifactId>spring-context</artifactId>
	          	</exclusion>
				<exclusion>
	          		<groupId>org.springframework</groupId>
	          		<artifactId>spring-core</artifactId>
	          	</exclusion>
				<exclusion>
	          		<groupId>org.springframework</groupId>
	          		<artifactId>spring-web</artifactId>
	          	</exclusion>
      		</exclusions>
  		</dependency>
	
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- List your specific dependencies below -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>1.6.2</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time-hibernate</artifactId>
			<version>1.2</version>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- ~~~~~~~~~~~ -->
		<!-- PERSISTENCE -->
		<!-- ~~~~~~~~~~~ -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.1_3</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<!-- jdbc driver depends on the database profile used -->
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>
		<!-- ~~~~~~~~~~ -->
		<!-- VALIDATION -->
		<!-- ~~~~~~~~~~ -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>
		<!-- ~~~~~~ -->
		<!-- LOGGER -->
		<!-- ~~~~~~ -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- ~~~~~ -->
		<!-- UTILS -->
		<!-- ~~~~~ -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
				<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-tx</artifactId>
  			<version>${spring.version}</version>
		</dependency>
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-web</artifactId>
  			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.6.8</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.8</version>
		</dependency>
		<!-- ~~~~~~~~~~~~~~~ -->
		<!-- SPRING SECURITY -->
		<!-- ~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- ~~~~~~~~~~~~ -->
		<!-- REST SUPPORT -->
		<!-- ~~~~~~~~~~~~ -->
		
  		
		<!-- ~~~ -->
		<!-- WEB -->
		<!-- ~~~ -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>runtime</scope>
		</dependency>
		<!-- ~~~~~~~ -->
		<!-- FILTERS -->
		<!-- ~~~~~~~ -->
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>sitemesh</artifactId>
			<version>2.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>3.1.0</version>
		</dependency>
		<!-- ~~~~ -->
		<!-- TEST -->
		<!-- ~~~~ -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<!-- ~~~~~~~~~~~~ -->
	<!-- REPOSITORIES -->
	<!-- ~~~~~~~~~~~~ -->
	<pluginRepositories>
		<pluginRepository>
			<id>Codehaus Snapshots</id>
			<url>https://nexus.codehaus.org/content/repositories/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<repositories>
		<repository>
			<id>repository.jboss.org</id>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<!-- ~~~~~ -->
	<!-- BUILD -->
	<!-- ~~~~~ -->
	<build>
		<defaultGoal>jetty:run</defaultGoal>
		<!-- the processing of ressources is done in two steps -->
		<resources>
			<!-- step 1: copy all properties, and replace all ${something} with their corresponding values defined in the properties -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>log4j.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<!-- step 2: copy ressources all non properties as-is -->
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.properties</exclude>
					<exclude>log4j.xml</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-enforcer-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>2.2.0</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>1.6.0</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-compiler-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-resources-plugin/ -->
				<!-- Substitute variables in resource files -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-antrun-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>Show help</id>
						<phase>initialize</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>Type the following commands</echo>
								<echo></echo>
								<echo>mvn -Pdb Create local embedded database using the files located in src/main/sql/${jdbc.type}/</echo>
								<echo>mvn -Pmetadata Create the xml representation of the current database</echo>
								<echo>mvn -Pgen Generate the project from either the xml representation or the current database</echo>
								<echo>mvn -PcleanGen clean Delete the generated code
</echo>
								<echo></echo>
								<echo>mvn test Compile and run unit tests</echo>
								<echo>mvn site Produce reports about the project</echo>
								<echo></echo>
								<echo>mvn jetty:run Compile and run the web application using the jetty servlet container</echo>
								<echo>mvn -Pperf jetty:run Compile and run the web application with perf settings</echo>
								<echo>mvn -Pjspcompilation Compile the jsp to make sure they do not contain error</echo>
								<echo>mvn -Pkeystore Create a keystore for jetty in order to run jetty with https</echo>
								<echo>mvn -Phttps Compile and run the web application using the jetty servlet container with https support</echo>
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>Instrument domain classes</id>
						<configuration>
							<tasks>
								<taskdef name="instrument" classname="org.hibernate.tool.instrument.javassist.InstrumentTask">
									<classpath>
										<path refid="maven.dependency.classpath" />
										<path refid="maven.plugin.classpath" />
									</classpath>
								</taskdef>
								<instrument verbose="true">
									<fileset dir="${project.build.outputDirectory}">
										<include name="**/com.mgt.mycity/*.class" />
									</fileset>
								</instrument>
							</tasks>
						</configuration>
						<phase>process-classes</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- http://wiki.eclipse.org/Jetty/Feature/Jetty_Maven_Plugin -->
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
                    <webAppConfig>                    
					   <contextPath>${application.contextpath}</contextPath>
					</webAppConfig>
                    <connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>${application.port}</port>
						</connector>
					</connectors>
					<requestLog implementation="org.eclipse.jetty.server.NCSARequestLog">
						<filename>${project.build.directory}/jetty-yyyy_mm_dd-request.log</filename>
						<retainDays>3</retainDays>
						<append>true</append>
						<extended>false</extended>
						<logTimeZone>GMT</logTimeZone>
					</requestLog>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-idea-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<jdkLevel>${jdk.version}</jdkLevel>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
					<useFullNames>false</useFullNames>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-eclipse-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-war-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-install-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-clean-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-surefire-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.4.3</version>
			<configuration>
					<!-- surefire uses a new jvm, MAVEN_OPTS are ignored, so you better set the memory options here -->
					<argLine>-Xmx512m -XX:MaxPermSize=256m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-site-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>2.0.1</version>
			</plugin>
		</plugins>
		<finalName>mycity</finalName>
	</build>
</project>
